@using Blazored.LocalStorage;
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Security.Claims;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <nav class="navbar bg-body-tertiary">
            <div class="container-fluid justify-content-end">
                @currentUserRole
                <a class="nav-header-link" href="/password">
                    <svg xmlns="http://www.w3.org/2000/svg" width="19" height="19" fill="currentColor" class="bi bi-person-square fa-lg" viewBox="0 0 16 16">
                        <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z" />
                        <path d="M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm12 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1v-1c0-1-1-4-6-4s-6 3-6 4v1a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12z" />
                    </svg>
                    @context.User.Identity.Name
                </a>
                @*<a href="/changePassword" class="me-3">
                    Hello, @context.User.Identity.Name!  @currentUserRole
                </a>*@
                <a class="nav-header-link" href="LogOut">Logout</a>
            </div>
        </nav>
    </Authorized>
    <NotAuthorized>
        <nav class="navbar bg-body-tertiary">
            <div class="container-fluid justify-content-end">
                <a class="nav-header-link" href="login">Log in</a>
            </div>
        </nav>
    </NotAuthorized>
</AuthorizeView>

@code{
    private string currentUserRole;

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;

        if (user.Identity.IsAuthenticated)
        {
            currentUserRole = user.FindFirst(c => c.Type.Contains("role"))?.Value;
        }
    }
}
